// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View>
    <View
      rounded={true}
      searchBar={true}
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": 0.5,
          "elevation": 3,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
          "top": 0,
        }
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#CECDD2",
            "borderBottomWidth": 1,
            "borderColor": "transparent",
            "borderLeftWidth": 0,
            "borderRadius": 25,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flex": 1,
            "flexDirection": "row",
            "height": 30,
            "justifyContent": "flex-start",
            "marginLeft": 2,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <TextInput
          editable={true}
          onChangeText={[Function]}
          placeholder="Search"
          placeholderTextColor="#575757"
          style={
            Object {
              "alignSelf": "center",
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 30,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": null,
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 0,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingTop": 6,
                  "shadowColor": null,
                  "shadowOffset": null,
                  "shadowOpacity": null,
                  "shadowRadius": null,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                note={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#a7a7a7",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "lineHeight": null,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                  }
                }
                uppercase={false}
                virtual={undefined}
              >
                target
              </Text>
            </View>
            <Modal
              animationType="slide"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={null}
              transparent={false}
              visible={false}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "height": 1334,
                  }
                }
                virtual={undefined}
              >
                <View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#F8F8F8",
                        "borderBottomColor": "#a7a6ab",
                        "borderBottomWidth": 0.5,
                        "elevation": 3,
                        "flexDirection": "row",
                        "height": 64,
                        "justifyContent": "center",
                        "left": 0,
                        "paddingLeft": 10,
                        "paddingRight": 10,
                        "paddingTop": 15,
                        "right": 0,
                        "shadowColor": undefined,
                        "shadowOffset": undefined,
                        "shadowOpacity": undefined,
                        "shadowRadius": undefined,
                        "top": 0,
                      }
                    }
                    virtual={undefined}
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "alignSelf": "center",
                          "flex": 1,
                        }
                      }
                      virtual={undefined}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        collapsable={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "alignSelf": null,
                            "backgroundColor": "transparent",
                            "borderBottomWidth": null,
                            "borderColor": null,
                            "borderLeftWidth": null,
                            "borderRadius": 5,
                            "borderRightWidth": null,
                            "borderTopWidth": null,
                            "elevation": 0,
                            "flexDirection": "row",
                            "height": 45,
                            "justifyContent": "space-between",
                            "marginLeft": -3,
                            "opacity": 1,
                            "paddingBottom": 6,
                            "paddingLeft": 6,
                            "paddingRight": 6,
                            "paddingTop": 6,
                            "shadowColor": null,
                            "shadowOffset": null,
                            "shadowOpacity": null,
                            "shadowRadius": null,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          disabled={false}
                          ellipsizeMode="tail"
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#007aff",
                              "fontFamily": "System",
                              "fontSize": 17,
                              "lineHeight": 19,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "top": undefined,
                            }
                          }
                          uppercase={false}
                          virtual={undefined}
                        >
                          Back
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "flex": 1,
                        }
                      }
                      virtual={undefined}
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        disabled={false}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "#000",
                            "fontFamily": "System",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "textAlign": "center",
                          }
                        }
                        virtual={undefined}
                      >
                        Select One
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-end",
                          "alignSelf": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "flex-end",
                        }
                      }
                      virtual={undefined}
                    />
                  </View>
                </View>
                <RCTScrollView
                  automaticallyAdjustContentInsets={false}
                  contentInset={
                    Object {
                      "bottom": 0,
                    }
                  }
                  enableAutoAutomaticScroll={true}
                  enableResetScrollToCoords={true}
                  extraHeight={75}
                  extraScrollHeight={0}
                  keyboardDismissMode="interactive"
                  keyboardOpeningTime={250}
                  onScroll={[Function]}
                  resetScrollToCoords={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  scrollEventThrottle={0}
                  showsVerticalScrollIndicator={true}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "flex": 1,
                    }
                  }
                  virtual={undefined}
                >
                  <View>
                    <RCTScrollView
                      closeOnRowBeginSwipe={false}
                      closeOnRowPress={true}
                      closeOnScroll={true}
                      dataArray={
                        Array [
                          <Styled(Item)
                            label="Users"
                            value="users"
                            virtual={undefined}
                          />,
                          <Styled(Item)
                            label="repos"
                            value="repos"
                            virtual={undefined}
                          />,
                        ]
                      }
                      dataSource={
                        ListViewDataSource {
                          "items": 2,
                        }
                      }
                      directionalDistanceChangeThreshold={2}
                      disableLeftSwipe={false}
                      disableRightSwipe={false}
                      enableEmptySections={true}
                      leftOpenValue={0}
                      previewFirstRow={false}
                      recalculateHiddenLayout={false}
                      renderRow={[Function]}
                      renderScrollComponent={[Function]}
                      rightOpenValue={0}
                      style={Object {}}
                      swipeToOpenPercent={50}
                      virtual={undefined}
                    >
                      <View>
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                              },
                              undefined,
                            ]
                          }
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 15,
                                "paddingBottom": 13,
                                "paddingRight": 15,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              disabled={false}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Users
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                              },
                              undefined,
                            ]
                          }
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 15,
                                "paddingBottom": 13,
                                "paddingRight": 15,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              disabled={false}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              repos
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </RCTScrollView>
              </View>
            </Modal>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingLeft": 10,
            "paddingRight": null,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#007aff",
              "fontFamily": "System",
              "fontSize": 16.5,
              "fontWeight": "500",
              "lineHeight": 19,
              "marginLeft": 0,
              "marginRight": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
            }
          }
          uppercase={false}
          virtual={undefined}
        >
          Search
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#F8F8F8",
        "borderColor": "#a7a6ab",
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
      }
    }
    virtual={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#007aff",
          "borderBottomLeftRadius": 5,
          "borderBottomWidth": 1,
          "borderColor": "#007aff",
          "borderLeftWidth": 1,
          "borderRadius": 0,
          "borderRightWidth": 1,
          "borderTopLeftRadius": 5,
          "borderTopWidth": 1,
          "elevation": 0,
          "flexDirection": "row",
          "height": 30,
          "justifyContent": "space-between",
          "opacity": 1,
          "paddingBottom": 6,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#fff",
            "fontFamily": "System",
            "fontSize": 14,
            "lineHeight": 19,
            "marginLeft": 0,
            "marginRight": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
        uppercase={false}
        virtual={undefined}
      >
        Owned repos
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "transparent",
          "borderBottomRightRadius": 5,
          "borderBottomWidth": 1,
          "borderColor": "#007aff",
          "borderLeftWidth": 0,
          "borderRadius": 0,
          "borderRightWidth": 1,
          "borderTopRightRadius": 5,
          "borderTopWidth": 1,
          "elevation": 0,
          "flexDirection": "row",
          "height": 30,
          "justifyContent": "space-between",
          "opacity": 1,
          "paddingBottom": 6,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#007aff",
            "fontFamily": "System",
            "fontSize": 14,
            "lineHeight": 19,
            "marginLeft": 0,
            "marginRight": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
        uppercase={false}
        virtual={undefined}
      >
        Starred repos
      </Text>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutoAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    onScroll={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={0}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    virtual={undefined}
  >
    <View>
      <View
        closeOnRowBeginSwipe={false}
        closeOnRowPress={true}
        closeOnScroll={true}
        directionalDistanceChangeThreshold={2}
        disableLeftSwipe={false}
        disableRightSwipe={false}
        leftOpenValue={0}
        previewFirstRow={false}
        recalculateHiddenLayout={false}
        rightOpenValue={0}
        style={Object {}}
        swipeToOpenPercent={50}
        virtual={undefined}
      />
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "#F8F8F8",
        "borderColor": "#cbcbcb",
        "borderTopWidth": 0.5,
        "elevation": 3,
        "flexDirection": "row",
        "height": 55,
        "justifyContent": "center",
        "left": 0,
        "paddingBottom": 0,
        "right": 0,
      }
    }
    virtual={undefined}
  >
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "backgroundColor": undefined,
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": null,
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flex": 1,
            "flexDirection": "column",
            "height": null,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 14,
                "lineHeight": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "fontSize": 6,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Profile
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#cde1f9",
            "borderBottomWidth": null,
            "borderColor": null,
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flex": 1,
            "flexDirection": "column",
            "height": null,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#007aff",
                "fontFamily": "System",
                "fontSize": 14,
                "lineHeight": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "fontSize": 6,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Repo
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": null,
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flex": 1,
            "flexDirection": "column",
            "height": null,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 14,
                "lineHeight": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "fontSize": 6,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Follower
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": null,
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flex": 1,
            "flexDirection": "column",
            "height": null,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 14,
                "lineHeight": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "fontSize": 6,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Following
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": null,
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 0,
            "flex": 1,
            "flexDirection": "column",
            "height": null,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": null,
            "shadowOffset": null,
            "shadowOpacity": null,
            "shadowRadius": null,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 14,
                "lineHeight": 16,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "fontSize": 6,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Notification
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders the first repo ListView component 1`] = `
<RCTScrollView
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  renderRow={[Function]}
  renderScrollComponent={[Function]}
>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      fji4/CS418
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      CS418 teapot
    </Text>
  </View>
</RCTScrollView>
`;

exports[`renders the repo bar ListView component 1`] = `
<RCTScrollView
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  renderRow={[Function]}
  renderScrollComponent={[Function]}
>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Owned repos
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Starred repos
    </Text>
  </View>
</RCTScrollView>
`;
